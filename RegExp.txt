Флаги:
i
Если этот флаг есть, то регэксп ищет независимо от регистра, то есть не различает между А и а.
g
Если этот флаг есть, то регэксп ищет все совпадения, иначе – только первое.
m
Многострочный режим.
-----------------------------------------------------------------------------------------------------------------------------
Методы RegExp и String:
str.search(reg) возвращает позицию первого совпадения или -1, если ничего не найдено.

str.match(reg) находит только одно, первое совпадение.
/*
Результат вызова – это массив, состоящий из этого совпадения, с дополнительными свойствами index – позиция,
на которой оно обнаружено и input – строка, в которой был поиск. 
При наличии флага g, вызов match возвращает обычный массив из всех совпадений.
В случае, если совпадений не было, match возвращает null
*/

str.split(reg|substr, limit) Разбивает строку в массив по разделителю – регулярному выражению regexp или подстроке substr.

str.replace(reg, str|func) Швейцарский нож для работы со строками, поиска и замены любого уровня сложности.
/*
заменить дефис на двоеточие
alert('12-34-56'.replace("-", ":")) // 12:34-56

Спецсимволы	Действие в строке замены
$$		Вставляет "$".
$&		Вставляет всё найденное совпадение.
$`		Вставляет часть строки до совпадения.
$'		Вставляет часть строки после совпадения.
$*n*		где n -- цифра или двузначное число, обозначает n-ю по счёту скобку, если считать слева-направо.

*/

regexp.test(str)  проверяет, есть ли хоть одно совпадение в строке str. Возвращает true/false.

regexp.exec(str) позволяет искать и все совпадения и скобочные группы в них.
/*
Можно заставить regexp.exec искать сразу с нужной позиции, если поставить lastIndex вручную
*/
-----------------------------------------------------------------------------------------------------------------------------
Классы символов:

Наиболее часто используются:
\d (от английского «digit» – «цифра»)
Цифра, символ от 0 до 9.
\s (от английского «space» – «пробел»)
Пробельный символ, включая табы, переводы строки и т.п.
\w (от английского «word» – «слово»)
Символ «слова», а точнее – буква латинского алфавита или цифра или подчёркивание '_'. Не-английские буквы не являются \w
\b – это особый класс обозначающий границу между символами.
обратные к ним
\D - Не-цифра, то есть любой символ кроме \d, например буква.
\S - Не-пробел, то есть любой символ кроме \s, например буква.
\W - Любой символ, кроме \w, то есть не латинница, не подчёркивание, не цифра. В частности, русские буквы принадлежат этому классу.
\B - Проверка, обратная \b.

В регулярном выражении, точка "." обозначает любой символ, кроме перевода строки.

Чтобы использовать специальный символ в качестве обычного, он должен быть экранирован.Или, другими словами, перед символом должен
быть обратный слэш '\'.

-----------------------------------------------------------------------------------------------------------------------------
Наборы и диапазоны 

Если в регулярном выражении несколько символов или символьных классов заключены в квадратные скобки […], 
то это означает "искать любой символ из указанных в […].

Квадратные скобки могут также содержать диапазоны символов. Например, [a-z] – произвольный символ от a до z.

Квадратные скобки, начинающиеся со знака каретки: [^…] находят любой символ, кроме указанных.
-----------------------------------------------------------------------------------------------------------------------------
Квантификаторы

Количество повторений символа можно указать с помощью числа в фигурных скобках: {n}.
/*
Регэксп \d{5} обозначает ровно 5 цифр, в точности как \d\d\d\d\d.
*/

Количество от-до: {3,5}
Для того, чтобы найти, например, числа размером от трёх до пяти знаков, нужно указать границы в фигурных скобках: \d{3,5}

Короткие обозначения:
+ Означает «один или более», то же что {1,}.
/*
Например, \d+ находит числа – последовательности из 1 или более цифр
*/

? Означает «ноль или один», то же что и {0,1}. По сути, делает символ необязательным.
-----------------------------------------------------------------------------------------------------------------------------
Скобочные группы:

Часть шаблона может быть заключена в скобки (...). Такие выделенные части шаблона называют «скобочными выражениями» или 
«скобочными группами».

У такого выделения есть два эффекта:

Он позволяет выделить часть совпадения в отдельный элемент массива при поиске через String#match или RegExp#exec.
Если поставить квантификатор после скобки, то он применится ко всей скобке, а не всего лишь к одному символу.

Обратные ссылки:

Ссылки в строке замены имеют вид $n, где n – это номер скобочной группы.
Вместо $n подставляется содержимое соответствующей скобки.
-----------------------------------------------------------------------------------------------------------------------------
Альтернация (или) |

Например, нам нужно найти языки программирования: HTML, PHP, Java и JavaScript.
Соответствующее регулярное выражение: html|php|java(script)?.
-----------------------------------------------------------------------------------------------------------------------------
Начало строки и конец

Знак каретки '^' и доллара '$' имеют в регулярном выражении особый смысл. Их называют «якорями» 
Каретка ^ совпадает в начале текста, а доллар $ – в конце.

Каретку ^ обычно используют, чтобы указать, что регулярное выражение необходимо проверить именно с начала текста.
Знак доллара $ используют, чтобы указать, что паттерн должен заканчиваться в конце текста.